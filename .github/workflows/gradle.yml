# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: nickname-api build

on:
  push:
    branches: [ master, feature-* ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Setup artifactory properties
        shell: bash
        env:
          ARTIFACTORY_CONTEXTURL: ${{ secrets.ARTIFACTORY_CONTEXTURL }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          mkdir -p ~/.gradle
          echo -e artifactory_contextUrl=$ARTIFACTORY_CONTEXTURL > ~/.gradle/gradle.properties
          echo -e artifactory_user=$ARTIFACTORY_USER >> ~/.gradle/gradle.properties
          echo -e artifactory_password=$ARTIFACTORY_PASSWORD >> ~/.gradle/gradle.properties

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Publish to artifactory
        run: ./gradlew artifactoryPublish

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ENV_1: ${{ secrets.ARTIFACTORY_CONFIG_TOKEN }}

      - name: Download artifact
        run:
          jf rt dl --sort-by=created --sort-order=desc --limit=1 *.jar

      - name: Move artifact
        run: |
          mkdir -p ./build/libs/
          mv $(find -iname 'myrestapp-0.0.1-*.jar') ./build/libs/myrestapp-0.0.1-SNAPSHOT.jar

      - name: Set Docker image tag
        shell: bash
        run: |
          if [ ${GITHUB_REF##*/} == "master" ]
          then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi
          echo value = ${GITHUB_REF##*/}

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: tj1283/nickname-app
          tags: ${{ env.DOCKER_TAG }}
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}